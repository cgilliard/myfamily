#!/bin/sh

MINIMAL_BUILD=false
if [ "$1" = "--minimal" ]; then
  MINIMAL_BUILD=true
fi

# Check for essential build tools
echo "Checking for essential build tools..."
command -v cc >/dev/null 2>&1 || { echo >&2 "cc is required but not installed. Aborting."; exit 1; }
command -v make >/dev/null 2>&1 || { echo >&2 "Make is required but not installed. Aborting."; exit 1; }
command -v sed >/dev/null 2>&1 }|| { echo >&2 "sed is required but not installed. Aborting."; exit 1; }


# If minimal build, exit here
if [ "$MINIMAL_BUILD" = true ]; then
  # Configure Makefile with Criterion paths
  cp Makefile.config.in Makefile.config
  if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS (BSD sed)
    sed -i '' "s|REPLACE_CRITERION_INCLUDE||g" Makefile.config
    sed -i '' "s|REPLACE_CRITERION_LIB||g" Makefile.config
    sed -i '' "s|REPLACE_CC|cc|g" Makefile.config
  else
    # Linux (GNU sed)
    sed -i "s|REPLACE_CRITERION_INCLUDE||g" Makefile.config
    sed -i "s|REPLACE_CRITERION_LIB||g" Makefile.config
    sed -i "s|REPLACE_CC|cc|g" Makefile.config
  fi
  echo "Minimal build setup complete."
  exit 0
fi

# Check for optional development tools
# Check for Python and pip
command -v python3 >/dev/null 2>&1 || { echo >&2 "Python 3 is required but not installed. Aborting."; exit 1; }
command -v pip3 >/dev/null 2>&1 || { echo >&2 "Pip is required but not installed. Aborting."; exit 1; }

# Check for Doxygen
command -v doxygen >/dev/null 2>&1 || { echo >&2 "Doxygen is not installed. Documentation will not be built."; }

# Ensure pre-commit is setup
rm -f .git/hooks/pre-commit
pre-commit install -f

cc=cc

for var in "$@"
do

# Parse command-line arguments for Criterion include and lib paths
if [[ $var == --with-criterion-include=* ]]; then
	include=${var#*=}
	echo "crit include = $include";
fi

if [[ $var == --with-criterion-lib=* ]]; then
        lib=${var#*=}
        echo "crit lib = $lib";
fi

if [[ $var == --with-cc=* ]]; then
	cc=${var#*=}
	echo "cc = $cc";
fi

done

# Configure Makefile with Criterion paths
cp Makefile.config.in Makefile.config
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS (BSD sed)
    sed -i '' "s|REPLACE_CRITERION_INCLUDE|${include}|g" Makefile.config
    sed -i '' "s|REPLACE_CRITERION_LIB|${lib}|g" Makefile.config
    sed -i '' "s|REPLACE_CC|${cc}|g" Makefile.config
else
    # Linux (GNU sed)
    sed -i "s|REPLACE_CRITERION_INCLUDE|${include}|g" Makefile.config
    sed -i "s|REPLACE_CRITERION_LIB|${lib}|g" Makefile.config
    sed -i "s|REPLACE_CC|${cc}|g" Makefile.config
fi

echo "Full development environment setup complete."
