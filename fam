#!/bin/sh

. ./scripts/env.sh
. ./scripts/color.sh

extra="-O3 -flto"
cc_flags='-Werror=switch -Wno-attributes -Wno-pointer-sign -Wno-ignored-attributes -Werror=incompatible-pointer-types -I..';
cc=cc
update_docs=0
skip_final=0
with_asan=0
s=0
filter=
target=
test=0
all=0
. ./scripts/parse_params.sh

if ${cc} -dM -E - < /dev/null | grep -q '__clang__'; then
    # If Clang is detected
    special="-Werror=incompatible-pointer-types-discards-qualifiers"
else
    # If GCC is detected
    special="-Werror=discarded-qualifiers"
fi

if [ "$test" = 1 ] || [ "$coverage" = 1 ] || [ "$fasttest" = 1 ]; then
	if [ "$coverage" = 1 ]; then
		extra="-g -O0 -DTEST --coverage";
	elif [ "$fasttest" = 1 ]; then
		extra="-O3 -flto -DTEST";
	else
                extra="-O0 -g -DTEST";
	fi
	if [ $s = 1 ]; then
		./fam --with-cc=$cc --with-extra="$extra" -s --skip-final || exit 1;
	else
		./fam --with-cc=$cc --with-extra="$extra" --skip-final || exit 1;
	fi
	echo "[${BLUE}================================================================================${RESET}]";
	if [ "$filter" != "" ]; then
		export TEST_FILTER=$filter;
	else
		unset TEST_FILTER;
	fi
	cd base;
	${cc} ${cc_flags} ${extra} ${special} -c test_impl.c || exit 1;
	cd ..;
	for dir in $subdirs; do
		if [ "$target" != "$dir" ] && [ "$target" != "" ]; then
			continue;
		fi
		cd ${dir};
 		echo "[${BLUE}====${RESET}] Running ${GREEN}$dir${RESET} test suite...";
		if [ -f "test.c" ]; then
			mkdir -p ./.bin
			eval "deps=\$deps_${dir}"
			${cc} ${cc_flags} ${extra} ${special} test.c -o ./.bin/test ${deps} || exit 1;
			./.bin/test || exit 1;
		fi
		cd ..;
	done

	echo "${GREEN}All tests passed!${RESET}";
	if [ "$1" = "coverage" ]; then
		if [ $update_docs = 1 ]; then
			./scripts/coverage.sh --update-docs
		else
			./scripts/coverage.sh
		fi
	fi
elif [ "$all" = 1 ]; then
	for dir in $subdirs
	do
		cd ${dir}
			if [ "$s" != "1" ]; then
				echo "Building ${dir}...";
			fi
			for file in *.c
			do
				newer_header=0;
				for header in *.h; do
					if [ ${header} -nt ${file%.c}.o ]; then
						newer_header=1;
					fi
				done
				if [ ! -e ${file%.c}.o ] || [ ${file} -nt ${file%.c}.o ] || [ $newer_header = 1 ]; then
					if [ ${file} != "test.c" ] && [ ${file} != "test_impl.c" ]; then
						if [ "$s" = "0" ]; then
							echo "${GREEN}C compile command$RESET: ${CYAN}${cc}${RESET}\n\
	${cc_flags}\n\
	${extra}\n\
	${special}\n\
	-o ${file%.c}.o\n\
	${YELLOW}-c ${file}$RESET"
						fi
						${cc} ${cc_flags} ${extra} ${special} -o ${file%.c}.o -c ${file} || exit 1;
					fi
				fi
			done
		cd ..
	done
	if [ "$skip_final" = "0" ]; then
		if [ $s = 0 ]; then
			echo "${GREEN}C compile command$RESET: ${CYAN}${cc}$RESET\n\
	${cc_flags}\n\
	${extra}\n\
	${special}\n\
	-o ${YELLOW}bin/fam$RESET */*.o";
		fi
		${cc} ${cc_flags} ${extra} ${special} -o bin/fam */*.o
	fi
else
	rm -rf */*.o */*.gcda */*.gcov */*.gcno */.bin/* main/resources.h bin/*
fi


